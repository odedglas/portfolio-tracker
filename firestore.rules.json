rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if false;
    }
    match /portfolios/{portfolio} {
      allow read, update: if request.auth.uid != null && resource.data.owner == request.auth.uid;
      allow write: if request.auth.uid != null
    }
    match /users/{user} {
      allow read, update: if request.auth.uid != null && resource.data.uid == request.auth.uid;
      allow write: if request.auth.uid != null
    }
    match /notifications/{notification} {
      allow read, update: if request.auth.uid != null && resource.data.owner == request.auth.uid;
      allow write: if request.auth.uid != null
    }
    match /alerts/{alert} {
      allow read, update: if request.auth.uid != null && resource.data.owner == request.auth.uid;
      allow write: if request.auth.uid != null
    }
    match /transactions/{transaction} {
      allow read, update: if request.auth.uid != null && get(/databases/$(database)/documents/portfolios/$(resource.data.portfolioId)).data.owner == request.auth.uid
      allow write: if request.auth.uid != null
    }
    match /holdings/{holding} {
      allow read, update: if request.auth.uid != null && get(/databases/$(database)/documents/portfolios/$(resource.data.portfolioId)).data.owner == request.auth.uid
      allow write: if request.auth.uid != null
    }
    match /portfolioHistory/{history} {
      allow read, update: if request.auth.uid != null && get(/databases/$(database)/documents/portfolios/$(resource.data.portfolioId)).data.owner == request.auth.uid
      allow write: if request.auth.uid != null
    }
  }
}
